/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package lenguajesproyecto2;

/**
 *
 * @author alejandrobr
 */
public class InfoGramatica extends javax.swing.JFrame {

    /**
     * Creates new form InfoGramatica
     */
    public InfoGramatica() {
        initComponents();
        this.setSize(615,500);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();

        jLabel3.setText("jLabel3");

        getContentPane().setLayout(null);

        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setText("Gramatica LL(1):");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 20, 250, 20);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("La primera L hace alusión al hecho de que el flujo de terminales se lee\nde izquierda a derecha, accediendo a la entrada por su izquierda (Left).\nLa segunda L se refiere a que el método de análisis predictivo\nconstruye una derivación a izquierdas. El número entre paréntesis\n indica el número de terminales que debemos consultar para decidir \nque regla de producción se aplica. Asi, en una gramática LL(2) \nla decisión final de que producción elegir se hace consultando los dos \nterminales a la entrada.");
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 50, 490, 180);

        jLabel2.setForeground(new java.awt.Color(254, 254, 254));
        jLabel2.setText("Automata de Pila:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 260, 180, 40);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("Es un modelo matemático de un sistema que recibe una cadena \nconstituida por símbolos de un alfabeto y determina si esa cadena \npertenece al lenguaje que el autómata reconoce. El lenguaje que \nreconoce un autómata con pila pertenece al grupo de los lenguajes \nlibres de contexto en la clasificación de la Jerarquía de Chomsky.");
        jScrollPane2.setViewportView(jTextArea2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(40, 310, 480, 120);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/10.jpg"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(-100, -40, 920, 560);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InfoGramatica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InfoGramatica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InfoGramatica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InfoGramatica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InfoGramatica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
